<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="neo4j-tutorial" default="run.koans" basedir=".">
	<property name="settings.dir" location="settings"/>
	<import file="${settings.dir}/download-neoclipse.xml"/>
	<import file="${settings.dir}/install-ant-eclipse.xml"/>
	<import file="${settings.dir}/install-ivy.xml"/>
	<import file="${settings.dir}/path.xml"/>
	<import file="${settings.dir}/test.xml"/>
	<target name="lib.retrieve" depends="install-ivy" unless="skip.ivy.download">
		<mkdir dir="${lib.dir}"/>
		<ivy:settings file="${settings.dir}/ivysettings.xml"/>
		<ivy:resolve file="${settings.dir}/ivy.xml"/>
		<ivy:retrieve type="jar" pattern="${lib.dir}/[artifact](-[classifier]).[ext]" changing="true"/>
		<ivy:retrieve type="bundle" pattern="${lib.dir}/[artifact].[ext]" changing="true"/>
	</target>
	<target name="refresh.dependencies" depends="-lib.clean, lib.retrieve"/>
	<target name="clean.dependencies">
		<delete dir="${lib.dir}"/>
		<delete dir="${ivy.dir}"/>
	</target>
	<target name="-lib.clean">
		<delete dir="${lib.dir}"/>
	</target>
	<target name="clean" depends="-lib.clean" description="Removes the build directory, but not any cached ivy dependencies">
		<delete dir="target"/>
		<delete dir="build"/>
	</target>
	<target name="compile" description="Compile production classes" depends="lib.retrieve">
        <mkdir dir="${main.target}"/>
        <javac srcdir="${main.src}" destdir="${main.target}" classpathref="path.libs" source="1.6"/>

		<tstamp>
			<format property="build.timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
		</tstamp>
		<copy file="src/main/resources/version.txt" todir="${main.target}" overwrite="true">
			<filterset>
				<filter token="BUILD_DATE" value="${build.timestamp}"/>
			</filterset>
		</copy>
	</target>
	<target name="compile.tests" description="Compile unit test classes" depends="compile">
		<mkdir dir="${test.target}"/>
		<javac srcdir="${test.src}" destdir="${test.target}" classpathref="path.testing" debug="true" target="1.5"/>
	</target>
	<target name="test" depends="clean, compile, compile.tests">
		<fileset id="unittest.source.files" dir="${test.src}">
			<include name="**/*Test*.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.testing" testfileset="unittest.source.files" outputdir="${test.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Unit test failures or errors"/>
	</target>
	<target name="compile.koans" description="Compile koans">
		<mkdir dir="${koan.target}"/>
		<javac srcdir="${koan.src}" destdir="${koan.target}" classpathref="path.koan" debug="true" target="1.6"/>
	</target>
	<target name="run.koans" depends="test, compile.koans">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan*.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>
	</target>

	<target name="run.koan02" depends="test, compile.koans" description="Run only Koan02">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan02.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
  	</target>
  
	<target name="run.koan03" depends="test, compile.koans" description="Run only Koan03">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan03.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan04" depends="test, compile.koans" description="Run only Koan04">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan04.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan05" depends="test, compile.koans" description="Run only Koan05">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan05.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan06" depends="test, compile.koans" description="Run only Koan06">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan06.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan07" depends="test, compile.koans" description="Run only Koan07">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan07.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan08a" depends="test, compile.koans" description="Run only Koan08a">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan08a.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan08b" depends="test, compile.koans" description="Run only Koan08b">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan08b.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan08c" depends="test, compile.koans" description="Run only Koan08c">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan08c.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan09" depends="test, compile.koans" description="Run only Koan09">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan09.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="run.koan10" depends="test, compile.koans" description="Run only Koan10">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan10.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>

	<target name="run.koan11" depends="test, compile.koans" description="Run only Koan11">
		<fileset id="koan.source.files" dir="${koan.src}">
			<include name="**/Koan11.java"/>
		</fileset>
		<run_junit_tests testclasspath="path.koan" testfileset="koan.source.files" outputdir="${koan.reports}"/>
		<fail if="tests.failed.or.errored" message="Build failed due to Koan failures"/>    
	</target>
  
	<target name="generate.eclipse.project" depends="-install.ant-eclipse, lib.retrieve">
		<mkdir dir="${main.target}"/>
		<mkdir dir="${test.target}"/>
		<mkdir dir="${koan.target}"/>
		<eclipse mode="java">
			<settings>
				<jdtcore compilercompliance="6.0"/>
			</settings>
			<project name="neo4j-tutorial"/>
			<classpath>
				<library pathref="path.libs"/>
				<source path="${main.src}"/>
				<source path="${test.src}"/>
				<source path="${koan.src}"/>
				<output path="${target}"/>
			</classpath>
		</eclipse>
	</target>
</project>
